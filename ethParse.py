#!/usr/bin/python

from Ethernet import Ethernet
from Arp import Arp
from IPv4 import IPv4
from Udp import Udp

packet = [ 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 
  0x02, 0x03, 0x04, 0x05, 0x08, 0x06, 0x00, 0x01, 
  0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x01, 
  0x02, 0x03, 0x04, 0x05, 0x0a, 0x00, 0x01, 0x65, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 
  0x01, 0x65
]

# 94  tapif_select::New Packet received of size: 68
# 95   Before byte re-ordering
# 96   0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0xff, 0xff,
# 97   0x44, 0x08, 0x55, 0xc9, 0x01, 0x00, 0x06, 0x08,
# 98   0x04, 0x06, 0x00, 0x08, 0x02, 0x00, 0x01, 0x00,
# 99   0x44, 0x08, 0x55, 0xc9, 0x64, 0x01, 0x00, 0x0a,
#100   0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
#101   0x00, 0x00, 0x65, 0x01, 0x00, 0x00, 0x00, 0x00,
#102   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
#103   0x00, 0x00, 0x00, 0x00, 0xe2, 0xaf, 0xe0, 0x7c,
#104
#105 After byte re-ordering
#106   0x02, 0x00, 0x00, 0x00,
#107   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x02,
#108   0xc9, 0x55, 0x08, 0x44, 0x08, 0x06, 0x00, 0x01,
#109   0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x02,
#110   0xc9, 0x55, 0x08, 0x44, 0x0a, 0x00, 0x01, 0x64,
#111   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00,
#112   0x01, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
#113   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
#114   0x00, 0x00, 0x00, 0x00, 0x7c, 0xe0, 0xaf, 0xe2,
#115   0x00, 0x00, 0x00, 0x02,

# First outgoing packet
packet = [
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x02,
   0xc9, 0x55, 0x08, 0x44, 0x08, 0x06, 0x00, 0x01,
   0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x02,
   0xc9, 0x55, 0x08, 0x44, 0x0a, 0x00, 0x01, 0x64,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00,
   0x01, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 #, 0x7c, 0xe0, 0xaf, 0xe2,
]

# Incoming packet in reverse order (network byte order)
inPkt = [
  0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0xff, 0xff,
  0x44, 0x08, 0x55, 0xc9, 0x01, 0x00, 0x06, 0x08,
  0x04, 0x06, 0x00, 0x08, 0x02, 0x00, 0x01, 0x00,
  0x44, 0x08, 0x55, 0xc9, 0x64, 0x01, 0x00, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0xd3, 0x8c, 0x00, 0x00,
  0x00, 0x00, 0xce, 0xa9, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd3, 0xaf, 0x48, 0x93
]

inPkt2 = [
  0x00, 0x5e, 0x00, 0x01, 0x02, 0x00, 0xfb, 0x00,
  0x44, 0x08, 0x55, 0xc9, 0x00, 0x45, 0x00, 0x08,
  0x42, 0x63, 0x5a, 0x00, 0x11, 0xff, 0x00, 0x40,
  0x00, 0x0a, 0xf1, 0x2b, 0x00, 0xe0, 0x64, 0x01,
  0xe9, 0x14, 0xfb, 0x00, 0x46, 0x00, 0xe9, 0x14,
  0x00, 0x00, 0xbe, 0x64, 0x00, 0x00, 0x00, 0x84,
  0x00, 0x00, 0x01, 0x00, 0x31, 0x03, 0x00, 0x00,
  0x31, 0x01, 0x30, 0x30, 0x31, 0x02, 0x30, 0x01,
  0x6e, 0x69, 0x07, 0x30, 0x64, 0x64, 0x61, 0x2d,
  0x72, 0x61, 0x04, 0x72, 0x00, 0x00, 0x61, 0x70,
  0x00, 0x01, 0x80, 0x0c, 0x00, 0x78, 0x00, 0x00,
  0x69, 0x6c, 0x07, 0x0f, 0x2d, 0x78, 0x75, 0x6e,
  0x6f, 0x6c, 0x05, 0x36, 0x00, 0x6c, 0x61, 0x63
]
#After byte re-ordering
inPkt3 = [
#  0x02, 0x00, 0x00, 0x00, 
#  recv_len_bytes = 108
  0x01, 0x00, 0x5e, 0x00, 0x00, 0xfb, 0x00, 0x02,
  0xc9, 0x55, 0x08, 0x44, 0x08, 0x00, 0x45, 0x00,
  0x00, 0x5a, 0x63, 0x42, 0x40, 0x00, 0xff, 0x11,
  0x2b, 0xf1, 0x0a, 0x00, 0x01, 0x64, 0xe0, 0x00,
  0x00, 0xfb, 0x14, 0xe9, 0x14, 0xe9, 0x00, 0x46,
  0x64, 0xbe, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x31,
  0x30, 0x30, 0x01, 0x31, 0x01, 0x30, 0x02, 0x31,
  0x30, 0x07, 0x69, 0x6e, 0x2d, 0x61, 0x64, 0x64,
  0x72, 0x04, 0x61, 0x72, 0x70, 0x61, 0x00, 0x00,
  0x0c, 0x80, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00,
  0x0f, 0x07, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x2d,
  0x36, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x00
  ]
  #0x00, 0x00, 0x00, 0x02
# Plan
# 1 - Are packets sent out of the lwip received on the other side? i.e. is the network byte order thing okay?
# 2 - Should I flip them in the microblaze? yes
# 00:02:c9:55:08:44
eth = Ethernet(inPkt3)
eth.dump()
print("eth.etherType = {0}".format(hex(eth.getEtherType())))
if eth.getEtherType() == 0x800:
  ipv4 = IPv4(eth.getPayload())
  ipv4.dump()
  if ipv4.getProtocol() == 17:
    udp = Udp(ipv4.getPayload())
    udp.dump()
elif eth.etherType == 0x0806:
  arp = Arp(eth.getPayload())
  arp.dump()
