import unittest

from IPv4 import IPv4
from Udp import Udp
from Ethernet import Ethernet

class UdpTests(unittest.TestCase):

    def test_beforePacket_select(self):
        # GIVEN
        afterPacket = [
            0x01, 0x00, 0x5e, 0x00, 0x00, 0xfb, 0x00, 0x02,
            0xc9, 0x55, 0x08, 0x44, 0x08, 0x00, 0x45, 0x00,
            0x00, 0x58, 0xe7, 0x89, 0x40, 0x00, 0xff, 0x11,
            0xa7, 0xab, 0x0a, 0x00, 0x01, 0x64, 0xe0, 0x00,
            0x00, 0xfb, 0x14, 0xe9, 0x14, 0xe9, 0x00, 0x44,
            0x2e, 0x0a, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x09, 0x6c,
            0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74,
            0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x00, 0x00,
            0x01, 0x80, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00,
            0x04, 0x0a, 0x00, 0x01, 0x64, 0xc0, 0x0c, 0x00,
            0x2f, 0x80, 0x01, 0x00, 0x00, 0x00, 0x78, 0x00,
            0x05, 0xc0, 0x0c, 0x00, 0x01, 0x40, 0x55, 0x5e
        ]

        # WHEN
        eth = Ethernet(afterPacket)
        eth.dump(False)
        ip = IPv4(eth.getPayload())
        ip.dump(True)
        udp = Udp(ip.getPayload())
        udp.dump(False)
#        print("eth.etherType = {0}".format(hex(eth.getEtherType())))

        # THEN
        self.assertEqual(eth.getEtherType(), 0x800)


if __name__ == '__main__':
    unittest.main()